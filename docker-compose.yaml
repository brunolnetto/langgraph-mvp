services:
  init:
    build:
      context: .
      dockerfile: Dockerfile
    image: langgraph_app_image:latest
    container_name: data_init
    command: ["python", "./scripts/generate_data.py"]
    volumes:
      - ./data:/app/data
  
  app:
    image: langgraph_app_image:latest
    container_name: langgraph_app
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./data:/app/data
    depends_on:
      init:
        condition: service_completed_successfully

    healthcheck:
      test: ["CMD", "curl", "-f", "localhost:8000/healthcheck"]
      interval: 30s
      timeout: 5s
      retries: 5
    develop:
      # Create a `watch` configuration to update the app
      # https://docs.docker.com/compose/file-watch/#compose-watch-versus-bind-mounts
      watch:
        # Sync the working directory with the `/app` directory in the container
        - action: sync
          path: .
          target: /app
          # Exclude the project virtual environment â€” it could be for a
          # different platform in the container
          ignore:
            - .venv/

        # Rebuild the image if dependencies change by checking uv.lock
        - action: rebuild
          path: ./uv.lock